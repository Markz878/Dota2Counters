@page "/"

<div class="h-full grid grid-rows-[min-content_min-content_auto] overflow-y-hidden @(animateExit ? "overflow-x-hidden animate-fadeOutLeft" : "") @(animateEnter ? "overflow-x-hidden animate-fadeInLeft" : "")">
    <div class="w-full row-start-1 row-end-2 grid grid-cols-1 md:grid-cols-4 grid-rows-4 md:grid-rows-1">
        <span class="ml-2 text-white self-center row-start-3 md:row-start-auto">@progress</span>
        <Button Command="GetRecommendedHeroes" Text="Get recommended heroes" Classes="bg-red-700 border-red-700 row-start-1 md:row-start-auto hover:bg-red-800 focus:border-red-900" Icon="aim.png" IsBusy=isBusy />
        <Button Command="EditCounterData" Text="Edit counters" Classes="bg-green-700 border-green-700 row-start-2 md:row-start-auto hover:bg-green-800 focus:border-yellow-900" Icon="edit.png" IsBusy=isBusy />
        <div class="ml-2 row-start-4 self-center md:justify-self-end md:row-start-auto @(heroCounterResults == null ? "hidden" : "")">
            <label class="text-white">Search:</label>
            <input type="search" @bind="searchText" @bind:event="oninput" class="p-1 bg-transparent text-white border-b-red-700 border-b-2" />
        </div>
    </div>
    <img src="@screenshot" class="col-start-1 col-end-2 row-start-2 row-end-3" />
    <div class="col-start-1 col-end-2 row-start-3 row-end-4 overflow-y-auto">
        @if (heroCounterResults is not null)
        {
            @foreach (HeroCounterResult hero in heroCounterResults.Where(x => x.Hero.StartsWith(searchText, StringComparison.OrdinalIgnoreCase)))
            {
                <div class="flex flex-row my-2 ml-2 items-center bg-white w-max min-w-[calc(100%-1rem)] opacity-80 cursor-pointer select-none" @onclick="() => GetHeroCounterMethods.ShowHeroDetails(hero.Hero)">
                    <img class="w-20" src="@AvatarCache.LargeAvatars[hero.Hero]" />
                    <span class="text-2xl mx-2">@hero.Hero</span>
                    <span class="text-2xl">@hero.Score</span>
                    @if (hero.GoodAgainst.Count > 0)
                    {
                        <span class="text-2xl text-green-500 ml-6">Good against:</span>
                        <span class="text-2xl ml-1">@string.Join(", ", hero.GoodAgainst)</span>
                    }
                    @if (hero.WorksWellWith.Count > 0)
                    {
                        <span class="text-2xl text-blue-500 ml-6">Good with:</span>
                        <span class="text-2xl ml-1">@string.Join(", ", hero.WorksWellWith)</span>
                    }
                    @if (hero.BadAgainst.Count > 0)
                    {
                        <span class="text-2xl text-red-500 ml-6">Bad against:</span>
                        <span class="text-2xl ml-1">@string.Join(", ", hero.BadAgainst)</span>
                    }
                </div>
            }
        }
    </div>
    <BusyIndicator IsBusy=isBusy Classes="col-start-1 col-end-2 row-start-2 row-end-4"/>
</div>
